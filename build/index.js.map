{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "../src/",
  "sources": [
    "index.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "module.exports = (container) ->\r\n  THREE = window.THREE = require 'three'\r\n  OrbitControls = require 'three-orbitcontrols'\r\n  GLTFLoader = require 'three-gltf-loader'\r\n  Reflector = require './reflector'\r\n  AnimationManager = require './animation-manager'\r\n  easing = require './easing'\r\n  camera = null\r\n  cubeCamera = null\r\n  scene = null\r\n  renderer = null\r\n  controls = null\r\n  barMesh = null\r\n  mirrorMat = null\r\n  clock = new THREE.Clock()\r\n  WIDTH = null\r\n  HEIGHT = null\r\n  objects = {}\r\n  loaded = false\r\n  animationManager = AnimationManager objects, clock\r\n  stateManager = require('./state-manager') animationManager, objects\r\n\r\n  #copper diffuse 140705\r\n\r\n  init = ->\r\n    #container = document.querySelector '#viz-container'\r\n    WIDTH = container.offsetWidth\r\n    HEIGHT = container.offsetHeight\r\n\r\n    camera = new THREE.PerspectiveCamera 45, WIDTH / HEIGHT, 0.1, 1000\r\n    camera.position.set 0, 9, 35.0\r\n\r\n    scene = new THREE.Scene()\r\n\r\n    backLight = new THREE.SpotLight 0xffffff\r\n    backLight.position.set 10, 60.0, -60.0\r\n    #backLight.castShadow = true\r\n    scene.add backLight\r\n    frontLight = new THREE.SpotLight 0xffffff\r\n    frontLight.position.set 0, 10, 60\r\n    scene.add frontLight\r\n    fillLight = new THREE.SpotLight 0xffffff\r\n    fillLight.position.set 60, 10, 0\r\n    scene.add fillLight\r\n    urls = ['px.png', 'nx.png', 'py.png', 'ny.png', 'pz.png', 'nz.png']\r\n    cubemap = new THREE.CubeTextureLoader().load urls\r\n    cubemap.format = THREE.RGBFormat\r\n    rodnormal = new THREE.TextureLoader().load 'rodnormal.png'\r\n    rodnormal.format = THREE.sRGBFormat\r\n\r\n    cubeGeometry = new THREE.BoxBufferGeometry 150, 150, 150\r\n    material = new THREE.MeshPhongMaterial\r\n      shininess: 50\r\n      color: 0x000000\r\n      specular: 0x999999\r\n\r\n    addObject = (geometry, material, x, y, z, ry) ->\r\n      tmpMesh = new THREE.Mesh geometry, material\r\n      tmpMesh.material.color.offsetHSL 0.1, -0.1, 0\r\n      tmpMesh.position.set x, y, z\r\n      tmpMesh.rotation.y = ry\r\n      tmpMesh.castShadow = true\r\n      tmpMesh.receiveShadow = true\r\n      scene.add tmpMesh\r\n      tmpMesh\r\n    barMirrorGeometry = new THREE.PlaneBufferGeometry 50.0, 5.2\r\n    barMirror = new Reflector barMirrorGeometry,\r\n      clipBias: 0.003\r\n      textureWidth: WIDTH * window.devicePixelRatio\r\n      textureHeight: HEIGHT * window.devicePixelRatio\r\n      color: 0xdb8778\r\n      recursion: 1\r\n    barMirror.rotateX -Math.PI / 2\r\n    scene.add barMirror\r\n\r\n    barGeometry = new THREE.BoxBufferGeometry 500, 6, 50\r\n    barMaterial = new THREE.MeshStandardMaterial\r\n      color: 0xfe8778\r\n      metalness: 0.9\r\n      envMap: cubemap\r\n      roughness: 0.2\r\n    baseMaterial = new THREE.MeshStandardMaterial\r\n      color: 0x000000\r\n      metalness: 0.8\r\n      envMap: cubemap\r\n      roughness: 0.5\r\n    rodMaterial = new THREE.MeshStandardMaterial\r\n      color: 0xfe8778\r\n      metalness: 1.0\r\n      envMap: cubemap\r\n      roughness: 0.2\r\n      normalMap: rodnormal\r\n\r\n    objects.camera = camera\r\n    loader = new THREE.GLTFLoader()\r\n    loader.load 'earthbar3.glb', (object) ->\r\n      object.scenes[0].traverse (child) ->\r\n        if child.isMesh\r\n          objects[child.name] = child\r\n          child.castShadow = true\r\n          child.receiveShadow = true\r\n      loaded = true\r\n      objects.base.material = baseMaterial\r\n      objects.base.material.morphTargets = true\r\n      scene.add objects.base\r\n      barMirror.position.set objects.mirror.position.x, objects.mirror.position.y,objects.mirror.position.z + 0.1\r\n      objects.plate.material = barMaterial\r\n      objects.plate.material.morphTargets = true\r\n      scene.add objects.plate\r\n      objects.cone.material = baseMaterial\r\n      scene.add objects.cone\r\n      objects.cone2.material = baseMaterial\r\n      scene.add objects.cone2\r\n      objects.bignut.material = baseMaterial\r\n      scene.add objects.bignut\r\n      objects.cone3 = objects.cone.clone()\r\n      objects.cone3.position.x += 35\r\n      scene.add objects.cone3\r\n      objects.cone4 = objects.cone2.clone()\r\n      objects.cone4.position.x += 35\r\n      scene.add objects.cone4\r\n      objects.bignut2 = objects.bignut.clone()\r\n      objects.bignut2.position.x += 35\r\n      scene.add objects.bignut2\r\n\r\n      objects.rods = []\r\n      objects.rod.material = rodMaterial\r\n      objects.hexnut.material = baseMaterial\r\n      objects.nubble.material = barMaterial\r\n      i = -2\r\n      while i++ < 6\r\n        myrod =\r\n          rod: objects.rod.clone()\r\n          nut1: objects.hexnut.clone()\r\n          nut2: objects.hexnut.clone()\r\n          nut3: objects.hexnut.clone()\r\n          nubble: objects.nubble.clone()\r\n        myrod.nut1.position.y += 1.2\r\n        myrod.nut3.position.y -= 1.4\r\n        for key, obj of myrod\r\n          scene.add obj\r\n          obj.position.x += 5 * i\r\n          if /nut/.test key\r\n            obj.rotation.y += Math.random() * Math.PI\r\n          if i is -1 or i is 6\r\n            obj.position.y -= 1.06 if key isnt 'nubble'  \r\n        objects.rods.push myrod\r\n      stateManager.init()\r\n\r\n\r\n    renderer = new THREE.WebGLRenderer\r\n      antialias: true\r\n    renderer.setPixelRatio window.devicePixelRatio\r\n    renderer.setSize WIDTH, HEIGHT\r\n    container.appendChild renderer.domElement\r\n    renderer.gammaInput = true\r\n    renderer.gammaOutput = true\r\n    renderer.setClearColor 0xffffff\r\n    renderer.shadowMap.enabled = true\r\n    renderer.shadowMap.type = THREE.BasicShadowMap\r\n\r\n\r\n    controls = new OrbitControls camera, renderer.domElement\r\n    controls.target.set 0, 0, 0\r\n    controls.update()\r\n    window.addEventListener 'resize', onWindowResize, false\r\n    objects.controls = controls\r\n\r\n\r\n  onWindowResize = ->\r\n    WIDTH = container.offsetWidth\r\n    HEIGHT = container.offsetHeight\r\n    camera.aspect = WIDTH / HEIGHT\r\n    camera.updateProjectionMatrix()\r\n    renderer.setSize WIDTH, HEIGHT\r\n\r\n  animate = ->\r\n    requestAnimationFrame animate\r\n    render()\r\n\r\n  render = ->\r\n    delta = clock.getDelta()\r\n    controls.update()\r\n    if loaded\r\n      animationManager.update()\r\n    renderer.render scene, camera\r\n\r\n  init()\r\n  animate()\r\n\r\n  window.transitionTo = stateManager.transitionTo"
  ]
}