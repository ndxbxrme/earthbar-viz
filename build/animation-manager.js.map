{
  "version": 3,
  "file": "animation-manager.js",
  "sourceRoot": "../src/",
  "sources": [
    "animation-manager.coffee"
  ],
  "names": [],
  "mappings": "AAAA;AAAA,MAAA;;EAAA,KAAA,GAAQ,OAAA,CAAQ,OAAR;;EAER,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,OAAD,EAAU,KAAV,CAAA;AACf,QAAA;IAAA,KAAA,GAAQ;WAER;MAAA,UAAA,EAAY,QAAA,CAAC,IAAD,CAAA;AACV,YAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA;QAAA,SAAA,GAAY,IAAI,CAAC,SAAL,IAAkB,CAAC,KAAK,CAAC,cAAN,CAAA,CAAA,GAAyB,CAAC,IAAI,CAAC,KAAL,IAAc,CAAf,CAA1B;QAC9B,OAAA,GAAU,IAAI,CAAC,OAAL,IAAgB,CAAC,SAAA,GAAY,IAAI,CAAC,QAAlB;QAC1B,MAAA,GAAS,KAAK,CAAC,GAAN,CAAU,OAAV,EAAmB,IAAI,CAAC,MAAxB;QACT,IAAI,CAAC,MAAL,GAAc,IAAI,CAAC,MAAL,IAAe,QAAA,CAAC,CAAD,CAAA;iBAAO;QAAP;QAC7B,IAAA,GACE;UAAA,SAAA,EAAW,SAAX;UACA,OAAA,EAAS,OADT;UAEA,MAAA,EAAQ,MAFR;UAGA,QAAA,EAAU,IAAI,CAAC,QAHf;UAIA,UAAA,EAAY,IAAI,CAAC,UAJjB;UAKA,QAAA,EAAU,IAAI,CAAC,QALf;UAMA,QAAA,EAAU,IAAI,CAAC,MANf;UAOA,QAAA,EAAU,IAAI,CAAC,QAAL,IAAiB;QAP3B;eAQF,KAAK,CAAC,IAAN,CAAW,IAAX;MAdU,CAAZ;MAeA,MAAA,EAAQ,QAAA,CAAA,CAAA;AACN,YAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,OAAA,EAAA;QAAA,IAAU,KAAK,CAAC,MAAN,KAAgB,CAA1B;AAAA,iBAAA;;QACA,GAAA,GAAM,KAAK,CAAC,cAAN,CAAA;QACN,KAAA,GAAQ;QACR,KAAA,uCAAA;;UACE,IAAG,GAAA,GAAM,IAAI,CAAC,OAAd;YACE,IAAI,CAAC,MAAO,CAAA,IAAI,CAAC,QAAL,CAAZ,GAA6B,IAAI,CAAC;YAClC,KAAK,CAAC,IAAN,CAAW,IAAX;;cACA;aAHF;WAAA,MAIK,IAAG,GAAA,IAAO,IAAI,CAAC,SAAf;YACH,IAAgD,CAAI,IAAI,CAAC,UAAT,IAAwB,IAAI,CAAC,UAAL,KAAqB,CAA7F;cAAA,IAAI,CAAC,UAAL,GAAkB,IAAI,CAAC,MAAO,CAAA,IAAI,CAAC,QAAL,EAA9B;;YACA,KAAA,GAAQ,CAAC,GAAA,GAAM,IAAI,CAAC,SAAZ,CAAA,GAAyB,CAAC,IAAI,CAAC,OAAL,GAAe,IAAI,CAAC,SAArB;YACjC,KAAA,GAAQ,IAAI,CAAC,UAAL,GAAkB,CAAC,IAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,UAAtB,CAAA,GAAoC,IAAI,CAAC,QAAL,CAAc,KAAd;YAC9D,IAAI,CAAC,MAAO,CAAA,IAAI,CAAC,QAAL,CAAZ,GAA6B,MAJ1B;;QALP;AAUA;QAAA,KAAA,yCAAA;;uBACE,KAAK,CAAC,MAAN,CAAa,KAAK,CAAC,OAAN,CAAc,IAAd,CAAb,EAAkC,CAAlC;QADF,CAAA;;MAdM;IAfR;EAHe;AAFjB",
  "sourcesContent": [
    "dotty = require 'dotty'\r\n\r\nmodule.exports = (objects, clock) ->\r\n  queue = []\r\n  \r\n  addToQueue: (args) ->\r\n    startTime = args.startTime or (clock.getElapsedTime() + (args.delay or 0))\r\n    endTime = args.endTime or (startTime + args.duration)\r\n    objRef = dotty.get objects, args.object\r\n    args.easing = args.easing or (t) -> t\r\n    item =\r\n      startTime: startTime\r\n      endTime: endTime\r\n      objRef: objRef\r\n      property: args.property\r\n      startValue: args.startValue\r\n      endValue: args.endValue\r\n      easingFn: args.easing\r\n      callback: args.callback or null\r\n    queue.push item\r\n  update: ->\r\n    return if queue.length is 0\r\n    now = clock.getElapsedTime()\r\n    delMe = []\r\n    for item in queue\r\n      if now > item.endTime\r\n        item.objRef[item.property] = item.endValue\r\n        delMe.push item\r\n        callback?()\r\n      else if now >= item.startTime\r\n        item.startValue = item.objRef[item.property] if not item.startValue and item.startValue isnt 0\r\n        ratio = (now - item.startTime) / (item.endTime - item.startTime)\r\n        value = item.startValue + (item.endValue - item.startValue) * item.easingFn ratio\r\n        item.objRef[item.property] = value\r\n    for item in delMe\r\n      queue.splice queue.indexOf(item), 1\r\n      "
  ]
}